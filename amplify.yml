# AWS Amplify Build Configuration
# Este arquivo configura como o AWS Amplify deve construir e hospedar a aplicação

version: 1
frontend:
  phases:
    # Fase de pré-construção - instalar dependências se necessário
    preBuild:
      commands:
        - echo "Starting build process..."
        - echo "No build dependencies required for static HTML/CSS/JS"
    
    # Fase de construção - preparar arquivos estáticos
    build:
      commands:
        - echo "Building static assets..."
        - echo "Configuring environment variables..."
        # Criar arquivo env.js dinâmico com variáveis do Amplify
        - |
          if [ ! -z "$API_URL" ]; then
            echo "Configurando API_URL: $API_URL"
            cat > frontend/env.js << EOF
          window.ENV = {
            API_URL: '$API_URL',
            STAGE: '${STAGE:-prod}',
            REGION: '${AWS_DEFAULT_REGION:-us-east-1}',
            DEBUG: ${DEBUG:-false},
            AUTO_REFRESH_INTERVAL: ${AUTO_REFRESH_INTERVAL:-30000},
            FEATURES: {
              REAL_TIME_UPDATES: true,
              NOTIFICATIONS: true,
              ANALYTICS: ${ANALYTICS:-false}
            }
          };
          console.log('✅ Environment configurado via Amplify:', window.ENV);
          EOF
          else
            echo "Usando configuração padrão do frontend/env.js"
          fi
        
    # Fase pós-construção - otimizações finais
    postBuild:
      commands:
        - echo "Build completed successfully!"
        - echo "Static files ready for deployment"

  # Artefatos a serem publicados
  artifacts:
    # Pasta raiz dos arquivos estáticos
    baseDirectory: frontend
    files:
      - '**/*'

  # Cache para otimizar builds subsequentes (opcional para projeto estático)
  cache:
    paths: []

# Configurações de ambiente (opcional)
# Você pode definir variáveis de ambiente aqui se necessário
# environment:
#   variables:
#     API_URL: https://your-api-gateway-url.com
#     STAGE: production
